<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario3_RequestModification"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:SDKTemplate.Controls"
    xmlns:logging="using:SDKTemplate.Logging"
    Loaded="Page_OnLoaded"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="12,10,12,12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Margin="0,0,0,10" Orientation="Vertical">
            <StackPanel x:Name="DescriptionText">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                    The AdaptiveMediaSource allows the app to manage some or all aspects of content download.
                    This can be done by modifying the arguments of the DownloadRequested callback, or by passing
                    an HttpClient to the constructor.  The default content of this scenario requires a Bearer or
                    Url token to be presented to the key service before responding with the decryption key.
                    Select an authentication mechanism to ensure this content loads.
                    This scenario also imposes bandwidth restriction based on the HDCP protection level.
                </TextBlock>
            </StackPanel>
            <local:ContentSelector x:Name="ContentSelectorControl"/>

            <StackPanel Orientation="Horizontal">
                <StackPanel x:Name="AzureAuthorizationMethodPanel" Margin="5,5">
                    <RadioButton x:Name="RadioButtonNone" GroupName="AzureMethod" Content="None" Tag="None" Click="AzureMethodSelected_Click" />
                    <RadioButton x:Name="RadioButtonAuthorizationHeader" GroupName="AzureMethod" Content="Authorization Header" Tag="AuthorizationHeader" Click="AzureMethodSelected_Click" IsChecked="True" />
                    <RadioButton x:Name="RadioButtonUrlQueryParameter" GroupName="AzureMethod" Content="Url Query Parameter" Tag="UrlQueryParameter" Click="AzureMethodSelected_Click" />
                    <RadioButton x:Name="RadioButtonApplicationDownloaded" GroupName="AzureMethod" Content="Application Downloaded" Tag="ApplicationDownloaded" Click="AzureMethodSelected_Click" />
                </StackPanel>
                <StackPanel Margin="5,5">
                    <TextBlock>Desired HDCP minimum protection</TextBlock>
                    <RadioButton x:Name="HcdpOff" GroupName="DesiredProtection" Content="HDCP Off" Tag="Off" Click="HdcpDesiredMinimumProtection_Click" IsChecked="True"/>
                    <RadioButton x:Name="HcdpOn" GroupName="DesiredProtection" Content="HDCP On" Tag="On" Click="HdcpDesiredMinimumProtection_Click"/>
                    <RadioButton x:Name="HdcpOnWithTypeEnforcement" GroupName="DesiredProtection" Content="HDCP On With Type Enforcement" Tag="OnWithTypeEnforcement" Click="HdcpDesiredMinimumProtection_Click"/>
                    <TextBlock>Effective protection: <Run x:Name="EffectiveHdcpProtectionText"/> (<Run x:Name="DesiredMaxBitrateText"/>)</TextBlock>
                </StackPanel>
            </StackPanel>
        </StackPanel>

        <MediaPlayerElement x:Name="mediaPlayerElement" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" AreTransportControlsEnabled="True" />

        <logging:LogView x:Name="LoggerControl" Grid.Row="2" Margin="0,10,0,0"/>
    </Grid>
</Page>
