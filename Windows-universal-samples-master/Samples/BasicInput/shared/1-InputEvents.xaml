<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BasicInput"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <ScrollViewer VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
        <StackPanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Margin="12,10,12,12">
            <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
            <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                XAML elements have built-in events for reaction to various types of input. This scenario demonstrates reacting to pointer pressed, pointer released, pointer entered, pointer exited, double-tapped, holding, and right-tapped events.
            </TextBlock>
            <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" Text="Pointer Pressed / Released" Margin="0,12,0,0"/>
            <Border x:Name="pressedTarget" Background="LightGray" Height="100" Width="150" BorderBrush="Black" BorderThickness="2" HorizontalAlignment="Left" ManipulationMode="None">
                <TextBlock x:Name="pressedTargetText" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <TextBlock Margin="0,12,0,0" Style="{StaticResource SubtitleTextBlockStyle}" Text="Pointer Enter / Exit"/>
            <Border x:Name="enterExitTarget" Background="LightGray" Height="100" Width="150" BorderBrush="Black" BorderThickness="2" HorizontalAlignment="Left" ManipulationMode="None">
                <TextBlock x:Name="enterExitTargetText" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <TextBlock Margin="0,12,0,0" Style="{StaticResource SubtitleTextBlockStyle}" Text="Tap / Double-Tap"/>
            <Border x:Name="tapTarget" Background="LightGray" Height="100" Width="150" BorderBrush="Black" BorderThickness="2" HorizontalAlignment="Left" ManipulationMode="None">
                <TextBlock x:Name="tapTargetText" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
            <TextBlock Margin="0,12,0,0" Style="{StaticResource SubtitleTextBlockStyle}" Text="Right-Tap / Press-and-Hold"/>
            <Border x:Name="holdTarget" Background="LightGray" Height="100" Width="150" BorderBrush="Black" BorderThickness="2" HorizontalAlignment="Left" ManipulationMode="None">
                <TextBlock x:Name="holdTargetText" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Border>
        </StackPanel>
    </ScrollViewer>
</Page>
