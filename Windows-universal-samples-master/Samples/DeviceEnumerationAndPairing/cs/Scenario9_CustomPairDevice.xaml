<!-- Copyright (c) Microsoft. All rights reserved. -->
<Page
    x:Class="DeviceEnumeration.Scenario9"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DeviceEnumeration"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <DataTemplate x:Key="ComboBoxItemTemplate">
            <TextBlock Margin="0,0,10,0" Text="{Binding Path=DisplayName}" />
        </DataTemplate>

        <DataTemplate x:Key="ResultsListViewTemplate">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" MinWidth="100"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Height="40" Width="40" Margin="5" VerticalAlignment="Top">
                    <Image Source="{Binding Path=GlyphBitmapImage}"
                           Stretch="UniformToFill"/>
                </Border>
                <Border Grid.Column="1" Margin="5">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Name:" Margin="0,0,5,0"/>
                            <TextBlock Text="{Binding Path=Name}" FontWeight="Bold" TextWrapping="WrapWholeWords"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Id:" Margin="0,0,5,0"/>
                            <TextBlock Text="{Binding Path=Id}" TextWrapping="Wrap"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="CanPair:" Margin="0,0,5,0"/>
                            <TextBlock Text="{Binding Path=CanPair}"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="IsPaired:" Margin="0,0,5,0"/>
                            <TextBlock Text="{Binding Path=IsPaired}"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>

    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid x:Name="RootGrid" Margin="12,20,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <ScrollViewer Grid.Row="0" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,15,0">

                    <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                    <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap" Margin="0,0,0,10" >
                        This scenario demonstrates how to perform custom pairing. Custom pairing allows your app to be involved in the pairing ceremony and use your on UI. 
                        If you want Windows to control the ceremony and display system UI, please look at the basic pairing scenario.                        
                        <LineBreak />This method can be used to pair devices like WiFiDirect, WSD, UPnP, Bluetooth or Bluetooth LE devices.
                        <LineBreak />Pairing can only be performed on DeviceInformation objects of kind DeviceInformationKind.AssociationEndpoint.
                    </TextBlock>

                    <TextBlock Margin="0,0,0,2" Text="Choose a device selector:" />
                    <ComboBox x:Name="selectorComboBox" 
                              Margin="0,0,0,5"
                              HorizontalAlignment="Left" 
                              ItemTemplate="{StaticResource ComboBoxItemTemplate}"
                              ItemsSource="{Binding}" />
                    <TextBlock Margin="0,0,0,2" Text="Select supported pairing ceremonies:" />
                    <VariableSizedWrapGrid Orientation="Horizontal" ItemWidth="150">
                        <CheckBox x:Name="confirmOnlyOption" Content="ConfirmOnly" IsChecked="True" />
                        <CheckBox x:Name="displayPinOption" Content="DisplayPin" IsChecked="True" />
                        <CheckBox x:Name="providePinOption" Content="ProvidePin" IsChecked="True" />
                        <CheckBox x:Name="confirmPinMatchOption" Content="ConfirmPinMatch" IsChecked="True" />
                    </VariableSizedWrapGrid>
                    <StackPanel Orientation="Vertical" >
                        <TextBlock Margin="0,0,0,2" Text="Choose a protection level:" />
                        <ComboBox x:Name="protectionLevelComboBox" 
                              Margin="0,0,0,5"
                              HorizontalAlignment="Left" 
                              ItemTemplate="{StaticResource ComboBoxItemTemplate}"
                              ItemsSource="{Binding}" />
                    </StackPanel>
                    <VariableSizedWrapGrid Orientation="Horizontal" ItemWidth="60">
                        <Button x:Name="startWatcherButton"
                                Margin="1"
                                Click="StartWatcherButton_Click"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                VariableSizedWrapGrid.ColumnSpan="2">
                            Start Watcher
                        </Button>
                        <Button x:Name="stopWatcherButton"
                                Margin="1"
                                IsEnabled="False"
                                Click="StopWatcherButton_Click"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                VariableSizedWrapGrid.ColumnSpan="2">
                            Stop Watcher
                        </Button>
                        <Button x:Name="pairButton"
                                Margin="1"
                                IsEnabled="False"
                                Click="PairButton_Click"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                VariableSizedWrapGrid.ColumnSpan="3">
                            Pair Selected Device
                        </Button>
                        <Button x:Name="unpairButton"
                                Margin="1"
                                IsEnabled="False"
                                Click="UnpairButton_Click"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                VariableSizedWrapGrid.ColumnSpan="3">
                            Unpair Selected Device
                        </Button>
                    </VariableSizedWrapGrid>

                    <Border x:Name="pairingPanel" BorderThickness="1" BorderBrush="Yellow" Margin="0,0,0,5" Visibility="Collapsed">
                        <StackPanel Orientation="Vertical">
                            <TextBlock x:Name="pairingTextBlock" Margin="0,0,0,2" TextWrapping="WrapWholeWords" />
                            <StackPanel Orientation="Horizontal" >
                                <TextBox x:Name="pinEntryTextBox" MinWidth="100" Margin="2" Visibility="Collapsed" />
                                <Button x:Name="okButton" MinWidth="75" Margin="2" Click="okButton_Click" Visibility="Collapsed">OK</Button>
                                <Button x:Name="yesButton" MinWidth="75" Margin="2" Click="yesButton_Click" Visibility="Collapsed">Yes</Button>
                                <Button x:Name="noButton" MinWidth="75" Margin="2" Click="noButton_Click" Visibility="Collapsed">No</Button>
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    
                    <Border BorderBrush="AntiqueWhite" BorderThickness="1">
                        <ListView x:Name="resultsListView"
                                  ItemTemplate="{StaticResource ResultsListViewTemplate}"
                                  ItemsSource="{Binding Path=ResultCollection}"
                                  SelectionChanged="ResultsListView_SelectionChanged"
                                  MaxHeight="450">
                        </ListView>
                    </Border>
                </StackPanel>
            </ScrollViewer>

            <!-- Status Block for providing messages to the user.  Use the
             NotifyUser() method to populate the message -->
            <Border x:Name="ErrorBorder" Background="Red" Grid.Row="2"/>
            <TextBlock x:Name="StatusBlock" Grid.Row="2" Margin="20, 10, 20, 10" Visibility="Collapsed"/>
        </Grid>
    </Grid>
</Page>
