<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario3"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="CommonListBoxStyle" TargetType="ListBox">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="200"/>
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <DataTemplate x:Key="CommonListBoxTemplate">
            <TextBlock Text="{Binding Path=Title}"></TextBlock>
        </DataTemplate>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="12,10,12,12">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                    The system provides a default animation when views are switched in place, as can be seen in SecondaryPage.xaml.
                    Some device families allow you to provide a custom animation when switching between views.
                    You should run this scenario by launching the app from Start instead of from Visual Studio since Visual Studio disables system animations while debugging.
                    <LineBreak/><LineBreak/>
                    Create a window in Scenario 1, then switch to it here to see a custom animation, if supported.
                </TextBlock>
                <Button VerticalAlignment="Top" Content="Switch to selected view" Margin="0,10,0,0" Click="AnimatedSwitch_Click"/>
                <TextBlock Style="{StaticResource BasicTextStyle}">Currently open views:</TextBlock>
                <ListBox x:Name="ViewChooser" ItemTemplate="{StaticResource CommonListBoxTemplate}" Style="{StaticResource CommonListBoxStyle}"/>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
