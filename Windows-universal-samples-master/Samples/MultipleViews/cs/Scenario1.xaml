<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="CommonListBoxStyle" TargetType="ListBox">
            <Setter Property="Width" Value="200"/>
            <Setter Property="Height" Value="200"/>
            <Setter Property="Margin" Value="0,5,0,5"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <DataTemplate x:Key="CommonListBoxTemplate">
            <TextBlock Text="{Binding Path=Title}"></TextBlock>
        </DataTemplate>
    </Page.Resources>

    <Grid x:Name="LayoutRoot" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="12,10,12,12">
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                    All applications start out by showing a single view to the user. In response to direct user action, you may choose to create and show a secondary view 
                    separate from your primary view. Each of these views runs in a separate thread from your primary view. You should never try to close the primary view. 
                    One good model is for the primary view to contain most of the functionality of your application, and secondary views
                    to contain a single document, page or location in your app. The primary view's thread serves as the manager for the application.
                    <LineBreak/><LineBreak/>
                    Since each of the secondary views will appear to the user as a separate app, it's possible for each of these views to participate
                    independently in system UI flows, clipboard, etc. Many APIs offer the "GetForCurrentView" method, which gets the object for the thread on
                    which it is invoked.
                </TextBlock>

                <Button Content="Create new view" Margin="0,10,0,0" Click="CreateView_Click"/>
                <Button Margin="0,10,0,0" Click="ShowAsStandalone_Click">
                    <TextBlock>
                    <Run FontFamily="Segoe UI Symbol">&#xE17C;</Run>
                    <Run>Show selected view as standalone</Run>
                    </TextBlock>
                </Button>
                <TextBlock Style="{StaticResource BasicTextStyle}">Open views:</TextBlock>
                <ListBox x:Name="ViewChooser" ItemTemplate="{StaticResource CommonListBoxTemplate}" Style="{StaticResource CommonListBoxStyle}"/>
                <TextBlock Style="{StaticResource BasicTextStyle}">Size preference for view to be shown:</TextBlock>
                <ListBox x:Name="SizePreferenceChooser" ItemTemplate="{StaticResource CommonListBoxTemplate}" Style="{StaticResource CommonListBoxStyle}"/>
                <TextBlock Style="{StaticResource BasicTextStyle}">Size preference for this view:</TextBlock>
                <ListBox x:Name="AnchorSizePreferenceChooser" ItemTemplate="{StaticResource CommonListBoxTemplate}" Style="{StaticResource CommonListBoxStyle}"/>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
