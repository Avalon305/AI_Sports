<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario1_EventAndMenuHookup"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Key="PaddedPanel" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Vertical" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="5,0,0,5" />
        </Style>
        <Style x:Key="ButtonGroup" BasedOn="{StaticResource PaddedPanel}" TargetType="StackPanel">
            <Setter Property="BorderBrush" Value="WhiteSmoke" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style TargetType="Button">
            <Setter Property="Margin" Value="0,5,0,0"/>
        </Style>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid x:Name="RootGrid" Margin="12,10,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                    Radial Controller Events Hookup to events and adding menu items using known and custom icons.
                </TextBlock>
            </StackPanel>

            <ScrollViewer Grid.Row="1">
                <StackPanel Orientation="Vertical">

                    <!-- Provide an AutomationProperties.Name for a GridView to a screen reader. A shipping app would localize this. -->
                    <GridView AutomationProperties.Name="Radial Controller Events Hookup" IsItemClickEnabled="False" SelectionMode="None">
                        <GridView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <ItemsWrapGrid Orientation="Horizontal" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" />
                            </ItemsPanelTemplate>
                        </GridView.ItemsPanel>

                        <!-- All shipping GridView items must have helpful, concise, localized and unique accessible names, so that 
                             a screen reader can make your customers aware of their purpose. Given that this sample defines each item
                             here, (are the items are not databound,) set the accessible names on each item explicitly. This sample 
                             contains placeholder text which would be replaced with appropriate localized text by a shipping app. -->

                        <!-- All shipping Images, Sliders, and ToggleSwitches must have helpful, concise, localized and unique
                             accessible names, so that a screen reader can make your customers aware of their purpose. This sample
                             contains placeholder text which would be replaced with appropriate localized text by a shipping app. -->
                        
                        <StackPanel AutomationProperties.Name="Item 0 details" Style="{StaticResource ButtonGroup}">
                            <Image AutomationProperties.Name="Item 0 Image accessible name" Height="64" Width="64" HorizontalAlignment="Left" Source="Assets\Item0.png"/>
                            <Button Content="Add Item 0" Click="AddItem" CommandParameter="0"/>
                            <Button Content="Select Item 0" Click="SelectItem" CommandParameter="0"/>
                            <Button Content="Remove Item 0" Click="RemoveItem" CommandParameter="0"/>
                            <Slider AutomationProperties.Name="Item 0 Slider accessible name" x:Name="slider0" />
                            <ToggleSwitch x:Name="toggle0" AutomationProperties.Name="Item 0 ToggleSwitch accessible name" />
                        </StackPanel>

                        <StackPanel AutomationProperties.Name="Item 1 details" Style="{StaticResource ButtonGroup}">
                            <Image AutomationProperties.Name="Item 1 Image accessible name" Height="64" Width="64" HorizontalAlignment="Left" Source="Assets\Item1.png"/>
                            <Button Content="Add Item 1" Click="AddItem" CommandParameter="1"/>
                            <Button Content="Select Item 1" Click="SelectItem" CommandParameter="1"/>
                            <Button Content="Remove Item 1" Click="RemoveItem" CommandParameter="1"/>
                            <Slider AutomationProperties.Name="Item 1 Slider accessible name" x:Name="slider1" />
                            <ToggleSwitch x:Name="toggle1" AutomationProperties.Name="Item 1 ToggleSwitch accessible name" />
                        </StackPanel>

                        <StackPanel AutomationProperties.Name="Item 2 details" Style="{StaticResource ButtonGroup}">
                            <Image AutomationProperties.Name="Item 2 Image accessible name" Height="64" Width="64" HorizontalAlignment="Left" Source="Assets\Item2.png"/>
                            <Button Content="Add Item 2" Click="AddItem" CommandParameter="2"/>
                            <Button Content="Select Item 2" Click="SelectItem" CommandParameter="2"/>
                            <Button Content="Remove Item 2" Click="RemoveItem" CommandParameter="2"/>
                            <Slider AutomationProperties.Name="Item 2 Slider accessible name" x:Name="slider2" />
                            <ToggleSwitch x:Name="toggle2" AutomationProperties.Name="Item 2 ToggleSwitch accessible name" />
                        </StackPanel>

                        <StackPanel AutomationProperties.Name="Item 3 details" Style="{StaticResource ButtonGroup}">
                            <Image AutomationProperties.Name="Item 3 Image accessible name" Height="64" Width="64" HorizontalAlignment="Left" Source="Assets\Item3.png"/>
                            <Button Content="Add Item 3" Click="AddItem" CommandParameter="3"/>
                            <Button Content="Select Item 3" Click="SelectItem" CommandParameter="3"/>
                            <Button Content="Remove Item 3" Click="RemoveItem" CommandParameter="3"/>
                            <Slider AutomationProperties.Name="Item 3 Slider accessible name" x:Name="slider3" />
                            <ToggleSwitch x:Name="toggle3" AutomationProperties.Name="Item 3 ToggleSwitch accessible name" />
                        </StackPanel>

                        <!-- There's no guarantee that a symbolic character from some font will be pronounced by a screen reader 
                             in a helpful way. So set helpful, concise, localized and uniqueaccessible names on the TextBlocks
                             so that a screen reader can make your customers aware of their purpose. This sample contains 
                             placeholder text which would be replaced with appropriate localized text by a shipping app. -->

                        <StackPanel AutomationProperties.Name="Item 4 details" Style="{StaticResource ButtonGroup}">
                            <TextBlock AutomationProperties.Name="Item 4 TextBlock accessible name" Height="64" Width="64" HorizontalAlignment="Left" FontFamily="Segoe UI Emoji" FontSize="45" Text="&#x2764;"/>
                            <Button Content="Add Item 4" Click="AddItem" CommandParameter="4"/>
                            <Button Content="Select Item 4" Click="SelectItem" CommandParameter="4"/>
                            <Button Content="Remove Item 4" Click="RemoveItem" CommandParameter="4"/>
                            <Slider AutomationProperties.Name="Item 4 Slider accessible name" x:Name="slider4" />
                            <ToggleSwitch x:Name="toggle4" AutomationProperties.Name="Item 4 ToggleSwitch accessible name" />
                        </StackPanel>

                        <StackPanel AutomationProperties.Name="Item 5 details" Style="{StaticResource ButtonGroup}">
                            <TextBlock AutomationProperties.Name="Item 5 TextBlock accessible name" Height="64" Width="64" HorizontalAlignment="Left" FontFamily="Assets\fontawesome-webfont.ttf#FontAwesome" FontSize="57" Text="&#xf0a1;"/>
                            <Button Content="Add Item 5" Click="AddItem" CommandParameter="5"/>
                            <Button Content="Select Item 5" Click="SelectItem" CommandParameter="5"/>
                            <Button Content="Remove Item 5" Click="RemoveItem" CommandParameter="5"/>
                            <Slider AutomationProperties.Name="Item 5 Slider accessible name" x:Name="slider5" />
                            <ToggleSwitch x:Name="toggle5" AutomationProperties.Name="Item 5 ToggleSwitch accessible name" />
                        </StackPanel>
                    </GridView>

                    <StackPanel Style="{StaticResource PaddedPanel}" Orientation="Horizontal">
                        <Button Content="Get Selected Item" Click="PrintSelectedItem"/>
                        <Button Content="Select Previous Item" Click="SelectPreviouslySelectedItem" Margin="5,5,10,0"/>
                        <ToggleSwitch IsOn="{x:Bind Controller.UseAutomaticHapticFeedback, Mode=TwoWay}">Haptics</ToggleSwitch>
                        <ToggleSwitch x:Name="MenuSuppressionToggleSwitch" Toggled="ToggleMenuSuppression">Suppress Default Menu</ToggleSwitch>
                    </StackPanel>

                    <StackPanel Style="{StaticResource PaddedPanel}">
                        <TextBlock FontSize="20">Log</TextBlock>
                        <ScrollViewer x:Name="logViewer" Grid.Column="0" MaxHeight="300" Padding="0,0,20,0">
                            <TextBlock x:Name="log" SizeChanged="OnLogSizeChanged" />
                        </ScrollViewer>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>
