<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario3"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    SizeChanged="OnSizeChanged"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid x:Name="RootGrid" Margin="12,20,12,12">
            <Grid.Resources>
                <Style x:Key="ColorButtonStyle"  TargetType="Button">
                    <Setter Property="MinWidth" Value="28"/>
                    <Setter Property="MinHeight" Value="28"/>
                    <Setter Property="Width" Value="28"/>
                    <Setter Property="Height" Value="28"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="FontSize" Value="0"/>
                    <Setter Property="Padding" Value="0,0,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Grid Background="Transparent">
                                    <Grid Background="Transparent">
                                        <Border x:Name="ColorButtonOuterBorder"
                                        BorderThickness="1"
                                        BorderBrush="Orange"
                                        Background="Transparent">
                                            <Border
                                            BorderBrush="LightGray"
                                            BorderThickness="1"
                                            Background="{TemplateBinding Background}"/>
                                        </Border>
                                    </Grid>

                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <VisualState.Setters>
                                                    <Setter Target="ColorButtonOuterBorder.BorderThickness" Value="2"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Pressed"/>
                                            <VisualState x:Name="Disabled"/>
                                        </VisualStateGroup>
                                        <VisualStateGroup x:Name="FocusStates">
                                            <VisualState x:Name="Focused">
                                                <VisualState.Setters>
                                                    <Setter Target="ColorButtonOuterBorder.BorderThickness" Value="2"/>
                                                </VisualState.Setters>
                                            </VisualState>
                                            <VisualState x:Name="Unfocused"/>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="0,0,0,10">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                    This scenario demonstrates using the XAML InkCanvas control
                    with ink settings specified through the Windows.UI.Input.Inking APIs instead of an InkToolbar.
                    It also demonstrates loading and saving ink files.
                </TextBlock>
            </StackPanel>

            <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="130"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock
                            Text="Pen Type:"
                            Grid.Row="0" Grid.Column="0"
                            Style="{StaticResource BasicTextStyle}"
                            VerticalAlignment="Center"
                            Margin="0,10"/>
                        <ComboBox
                            x:Name="PenType"
                            Grid.Row="0" Grid.Column="1"
                            VerticalAlignment="Center"
                            Width="132" Height="Auto"
                            SelectedIndex="0"
                            SelectionChanged="OnPenTypeChanged">
                            <ComboBoxItem Content="Ballpoint"/>
                            <ComboBoxItem Content="Highlighter"/>
                            <ComboBoxItem Content="Calligraphy"/>
                            <ComboBoxItem Content="Pencil"/>
                        </ComboBox>

                        <TextBlock
                            Text="Pen Thickness:"
                            Grid.Row="0" Grid.Column="2"
                            Style="{StaticResource BasicTextStyle}"
                            VerticalAlignment="Center"
                            Margin="10,10"/>
                        <ComboBox
                            x:Name="PenThickness"
                            Grid.Row="0" Grid.Column="3"
                            VerticalAlignment="Center"
                            Width="132" Height="Auto"
                            SelectedIndex="1"
                            SelectionChanged="OnPenThicknessChanged">
                            <ComboBoxItem Content="Smallest"/>
                            <ComboBoxItem Content="Small"/>
                            <ComboBoxItem Content="Medium"/>
                            <ComboBoxItem Content="Large"/>
                            <ComboBoxItem Content="Largest"/>
                        </ComboBox>

                        <TextBlock
                            Text="Color:"
                            Grid.Row="2" Grid.Column="0"
                            Style="{StaticResource BasicTextStyle}"
                            HorizontalAlignment="Left" VerticalAlignment="Center"
                            Margin="0,5"/>
                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal">
                            <Button Background="Red"    Foreground="Red"    Click="OnPenColorChanged" Style="{StaticResource ColorButtonStyle}" Margin="0,0,3,0"/>
                            <Button Background="Green"  Foreground="Green"  Click="OnPenColorChanged" Style="{StaticResource ColorButtonStyle}" Margin="0,0,3,0"/>
                            <Button Background="Blue"   Foreground="Blue"   Click="OnPenColorChanged" Style="{StaticResource ColorButtonStyle}" Margin="0,0,3,0"/>
                            <Button Background="Yellow" Foreground="Yellow" Click="OnPenColorChanged" Style="{StaticResource ColorButtonStyle}" Margin="0,0,3,0"/>
                        </StackPanel>
                    </Grid>

                    <!-- Button panel -->
                    <StackPanel Orientation="Horizontal" Margin="0,5">
                        <Button Content="Clear" Width="65" Margin="0,0,3,0" Click="OnClear"/>
                        <Button Content="Load"  Width="65" Margin="0,0,3,0" Click="OnLoadAsync"/>
                        <Button Content="Save"  Width="65" Margin="0,0,3,0" Click="OnSaveAsync"/>
                        <CheckBox Content="Enable Touch Inking" Margin="10,0,3,0" Checked="TouchInkingCheckBox_Checked" Unchecked="TouchInkingCheckBox_Unchecked"/>
                        <CheckBox Content="Enable Erasing Mode" Margin="10,0,3,0" Checked="ErasingModeCheckBox_Checked" Unchecked="ErasingModeCheckBox_Unchecked"/>
                    </StackPanel>
                    <ScrollViewer ZoomMode="Enabled" MinZoomFactor="1" VerticalScrollMode="Enabled" VerticalScrollBarVisibility="Auto" HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Auto">
                        <Grid x:Name="outputGrid" Background="{ThemeResource SystemControlBackgroundChromeWhiteBrush}">
                            <!-- Inking area -->
                            <InkCanvas x:Name="inkCanvas"/>
                        </Grid>
                    </ScrollViewer>
                </StackPanel>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>