<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario2"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKTemplate"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    SizeChanged="OnSizeChanged"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid x:Name="RootGrid" Margin="12,10,12,12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Margin="0,0,0,10">
                <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
                <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                    This scenario demonstrates creating custom features and add them to the InkToolbar. <LineBreak/>
                    Custom InkToolbar features can include: <LineBreak/>
                    Custom pen - A pen for which the ink color palette and pen tip properties, such as shape, rotation, and size, are defined by the app. For this example, we added a calligraphic pen.<LineBreak/>
                    Custom tool - A non-pen tool, defined by the app, that complements the built-in features of an InkToolbar. For this example, we added a stroke selection tool. <LineBreak/>
                    Custom toggle - Sets the state of an app-defined feature to on or off. When turned on, the feature works in conjunction with the active tool. For this example, we added touch writing.
                </TextBlock>
            </StackPanel>

            <ScrollViewer Grid.Row="1" VerticalScrollMode="Auto" VerticalScrollBarVisibility="Auto">
                <Grid HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0"  Orientation="Horizontal">
                        <InkToolbar TargetInkCanvas="{x:Bind inkCanvas}" ActiveToolChanged="CurrentToolChanged">
                            <InkToolbar.Resources>
                                <BrushCollection x:Key="CalligraphicPenPalette">
                                    <SolidColorBrush>Black</SolidColorBrush>
                                    <SolidColorBrush>Brown</SolidColorBrush>
                                    <SolidColorBrush>Red</SolidColorBrush>
                                    <SolidColorBrush Color="#FFFFCE00"/>
                                    <SolidColorBrush Color="#FF26E600"/>
                                    <SolidColorBrush Color="#FF004DE6"/>
                                </BrushCollection>
                                <local:CalligraphicPen x:Key="CalligraphicPen"/>
                            </InkToolbar.Resources>
                            <InkToolbarCustomPenButton x:Name="calligraphyPen"
                                                   CustomPen="{StaticResource CalligraphicPen}"
                                                   Palette="{StaticResource CalligraphicPenPalette}"
                                                   SelectedBrushIndex="0"
                                                   MinStrokeWidth="4"
                                                   MaxStrokeWidth="10"
                                                   ToolTipService.ToolTip="Calligraphy pen">
                                <Border>
                                    <Grid>
                                        <TextBlock AutomationProperties.AccessibilityView="Raw" FontFamily="Segoe MDL2 Assets" Text="&#xEDFB;" Canvas.ZIndex="1"/>
                                        <TextBlock AutomationProperties.AccessibilityView="Raw" FontFamily="Segoe MDL2 Assets" Text="&#xF0C7;" 
                                                   Foreground="{x:Bind calligraphyPen.SelectedBrush, Mode=OneWay}" Canvas.ZIndex="0"/>
                                    </Grid>
                                </Border>
                                <InkToolbarCustomPenButton.ConfigurationContent>
                                    <InkToolbarPenConfigurationControl/>
                                </InkToolbarCustomPenButton.ConfigurationContent>
                            </InkToolbarCustomPenButton>
                            <InkToolbarCustomToolButton x:Name="toolButtonLasso" Click="ToolButton_Lasso" ToolTipService.ToolTip="Selection tool">
                                <SymbolIcon Symbol="{x:Bind LassoSelect}"/>
                            </InkToolbarCustomToolButton>
                            <InkToolbarCustomToggleButton x:Name="toggleButton" Click="Toggle_Custom" ToolTipService.ToolTip="Touch Writing">
                                <SymbolIcon Symbol="{x:Bind TouchWriting}"/>
                            </InkToolbarCustomToggleButton>
                        </InkToolbar>
                        <Button x:Name="ButtonCut" Content="Cut" Width="65" Margin="3,0,3,0" Click="OnCut"/>
                        <Button x:Name="ButtonCopy" Content="Copy" Width="65" Margin="0,0,3,0" Click="OnCopy"/>
                        <Button x:Name="ButtonPaste" Content="Paste" Width="65" Margin="0,0,3,0" Click="OnPaste"/>
                    </StackPanel>
                    <ScrollViewer Grid.Row="1" x:Name="scrollViewer" ZoomMode="Enabled" MinZoomFactor="1" VerticalScrollMode="Enabled" VerticalScrollBarVisibility="Auto" HorizontalScrollMode="Enabled" HorizontalScrollBarVisibility="Auto">
                        <Grid x:Name="outputGrid" Background="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" Height="Auto">
                            <!-- Inking area -->
                            <Canvas x:Name="selectionCanvas"/>
                            <InkCanvas x:Name="inkCanvas" Height="Auto"/>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>