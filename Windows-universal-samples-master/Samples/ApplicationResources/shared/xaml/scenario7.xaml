<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.Scenario7"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Grid.Row="0" Margin="0,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                It is possible that, while an application is running, the language, scale, contrast or other settings may change. In 
                order to handle these events, event listeners should be registered to listen for and react to the change.
                </TextBlock>
            <TextBlock x:Name="InputTextBlock2" Grid.Row="1" Margin="0,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                Note: If an image with variants for different scales is used, as shown in the File Resources in XAML scenario,
                it is not necessary to use an 
                event listener to reload images when scale has changed. The XAML runtime will automatically reload images as needed. 
                This can be seen in
                the File Resources in XAML scenario
                when running on a multi-monitor system configured with a low-DPI monitor and a high-DPI 
                monitor by dragging the app from one monitor to the other.
            </TextBlock>
            <TextBlock x:Name="InputTextBlock3" Grid.Row="2" Margin="0,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                Note: the Application Languages scenario
                demonstrates use of the PrimaryLanguageOverride property to override the language used for 
                the app. If a specific language was set in that scenario, then changing the language in Settings will not 
                have any visible effect in this scenario. To see an effect in this scenario, make sure that the
                "Use language preferences (recommended)" option is selected in
                the Application Languages scenario.
            </TextBlock>
            <TextBlock x:Name="InputTextBlock4" Grid.Row="3" Margin="0,0,0,10" TextWrapping="Wrap" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left">
                Click the button below to show resources for the current context. Next, change the language by going to PC Settings &gt;
                Time &amp; language &gt; Region &amp; language and add a language that is supported by the app (e.g., Japanese); then 
                move the new language to the top of the list (Set as primary).
            </TextBlock>
            <Button x:Name="Scenario7Button_Show" Grid.Row="4" Content="Show Message" Margin="0,0,10,0" Click="Scenario7Button_Show_Click"/>
        </Grid>

        <Grid x:Name="Output" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Style="{StaticResource BasicTextStyle}" x:Name="Scenario7TextBlock" FontSize="20" TextWrapping="Wrap" />
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
