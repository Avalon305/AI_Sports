<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->

<Page
    x:Class="SDKTemplate.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="InputTextBlock1" Margin="0,0,0,10" TextWrapping="Wrap" Grid.Row="0" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                The text in the output section below uses an x:Uid attribute to refer to a string resource. The existence of 
                the x:Uid attribute instructs the XAML parser to retrieve that element's string resources using the Windows 
                resource management system using the Uid attribute value. Strings are authored in a Resources file (.resw). 
                 Strings can be localized for various langauge by placing copies of the Resources file with appropriate 
                strings in folders that are named using appropriate BCP-47 language tags (e.g., "en", "de-CH", etc.). 
            </TextBlock>
            <TextBlock x:Name="InputTextBlock2"  TextWrapping="Wrap" Grid.Row="1" Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" >
                Entries in the .resw file are of the form [Uid].[attribute]. Open the Scenario1.xaml file and note the use 
                of the x:Uid="WelcomeHeader" attribute for the TextBlock in the Output section and the corresponding 
                WelcomeHeader.Text resource in the strings\...\resources.resw file.
            </TextBlock>
        </Grid>

        <Grid x:Name="Output" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Row="1">
            <TextBlock Style="{StaticResource BasicTextStyle}" x:Uid="WelcomeHeader" x:Name="Scenario1TextBlock" Text="Hello" HorizontalAlignment="Left" FontSize="20" />
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>

</Page>
