<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="SDKTemplate.CustomTrigger"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SDKTemplate"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <ScrollViewer Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="12,10,12,12">
        <StackPanel>
            <TextBlock Text="Description:" Style="{StaticResource SampleHeaderTextStyle}"/>
            <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap">
                This scenario demonstrates how to use a custom trigger for a background task.
            </TextBlock>
            <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" FontWeight="Bold" TextWrapping="Wrap" Margin="0,20,0,0">
               Custom Trigger Registration
            </TextBlock>
            <StackPanel Margin="10,10,10,0" Grid.Row="1">
                <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                    <Button x:Name="RegisterCustomTrigger" Content="Register" Margin="0,0,10,0" Click="RegisterCustomTrigger_Click"/>
                    <Button x:Name="UnregisterCustomTrigger" Content="Unregister" Margin="0,0,10,0" Click="UnregisterCustomTrigger_Click"/>
                 </StackPanel>
            </StackPanel>
            <TextBlock Style="{StaticResource ScenarioDescriptionTextStyle}" TextWrapping="Wrap" Margin="0,10,0,0">
                After registering the task, connect a fx2 device. The task will display a device arrival notification toast.
            </TextBlock>
        </StackPanel>
    </ScrollViewer>
</Page>
